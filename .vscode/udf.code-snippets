{
  "carousel_intro": {
    "prefix": "carousel_intro",
    "body": "/*\nTODO: Implement this @ controller\nint currentIndex = 0;\nfinal CarouselController carouselController = CarouselController();\n*/\nBuilder(builder: (context) {\nList<Map<String, dynamic>> introItems = [\n{\n\"photo\":\n\"https://img.freepik.com/free-vector/flat-creativity-concept-illustration_52683-64279.jpg?w=740&t=st=1692762500~exp=1692763100~hmac=9b300dd1728363d4bac6b26a13679bb83e2465469f083d6201eb3a872e8c46ba\",\n\"title\": \"Intro 1\",\n\"description\":\n\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\",\n},\n{\n\"photo\":\n\"https://img.freepik.com/free-vector/internship-job-training-illustration_23-2148751280.jpg?w=740&t=st=1692762545~exp=1692763145~hmac=e5d3e7c959168aed6c6351164c2e4ace88e16581ac12ff0d5a9c590eb276f902\",\n\"title\": \"Intro 2\",\n\"description\":\n\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\",\n},\n{\n\"photo\":\n\"https://img.freepik.com/free-vector/blogging-concept-illustration_114360-1038.jpg?w=740&t=st=1692762587~exp=1692763187~hmac=8af5a991cdbb32b7ae908822306ea9475ffaf72f58bf68c81c330bfa34b6479d\",\n\"title\": \"Intro 3\",\n\"description\":\n\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\",\n},\n];\n\nreturn Column(\nchildren: [\nCarouselSlider(\ncarouselController: controller.carouselController,\noptions: CarouselOptions(\nheight: MediaQuery.of(context).size.height * 0.75,\nautoPlay: true,\nenlargeCenterPage: true,\nviewportFraction: 1.0,\nonPageChanged: (index, reason) {\ncontroller.currentIndex = index;\ncontroller.setState(() {});\n},\n),\nitems: introItems.map((item) {\nreturn Builder(\nbuilder: (BuildContext context) {\nreturn Card(\nelevation: 8.0,\ncolor: Colors.white,\nchild: Column(\nchildren: [\nExpanded(\nchild: Container(\nwidth: MediaQuery.of(context).size.width,\nmargin: const EdgeInsets.symmetric(\nhorizontal: 0.0),\ndecoration: BoxDecoration(\ncolor: Colors.grey[300],\nborderRadius: const BorderRadius.all(\nRadius.circular(6.0),\n),\nimage: DecorationImage(\nimage: NetworkImage(\nitem[\"photo\"],\n),\nfit: BoxFit.cover,\n),\n),\n),\n),\nContainer(\npadding: const EdgeInsets.all(16.0),\ncolor: Colors.white,\nwidth: MediaQuery.of(context).size.width,\nchild: Center(\nchild: Text(\nitem[\"title\"],\nstyle: const TextStyle(\nfontSize: 20.0,\nfontWeight: FontWeight.bold,\n),\n),\n),\n),\nContainer(\npadding: const EdgeInsets.all(16.0),\ncolor: Colors.white,\nwidth: MediaQuery.of(context).size.width,\nchild: Text(\nitem[\"description\"],\nstyle: const TextStyle(\nfontSize: 14.0,\n),\n),\n),\n],\n),\n);\n},\n);\n}).toList(),\n),\nconst SizedBox(\nheight: 12.0,\n),\nRow(\nmainAxisAlignment: MainAxisAlignment.center,\nchildren: introItems.asMap().entries.map((entry) {\nbool isSelected = controller.currentIndex == entry.key;\nreturn GestureDetector(\nonTap: () => controller.carouselController\n.animateToPage(entry.key),\nchild: Container(\nwidth: isSelected ? 40 : 6.0,\nheight: 6.0,\nmargin: const EdgeInsets.only(\nright: 6.0,\ntop: 12.0,\n),\ndecoration: BoxDecoration(\ncolor: isSelected\n? primaryColor\n: const Color(0xff3c3e40),\nborderRadius: const BorderRadius.all(\nRadius.circular(12.0),\n),\n),\n),\n);\n}).toList(),\n),\n],\n);\n}),\nQButton(\nlabel: \"Next\",\nonPressed: () => Get.offAll(const LoginView()),\n),"
  },
  "w_txt_email": {
    "prefix": "w_txt_email",
    "body": "TextFormField(\ndecoration: InputDecoration(\nlabelText: 'Email',\nlabelStyle: const TextStyle(\ncolor: Colors.blueGrey,\n),\nenabledBorder: const OutlineInputBorder(\nborderRadius: BorderRadius.all(\nRadius.circular(8.0),\n),\nborderSide: BorderSide(\ncolor: Colors.blueGrey,\n),\n),\nprefixIcon: Icon(\nIcons.email,\ncolor: primaryColor,\n),\n),\nonChanged: (value) {},\n),"
  },
  "w_txt_password": {
    "prefix": "w_txt_password",
    "body": "/*\nTODO: Implement this @ controller\nbool isHidenPassword = true;\n*/\nTextFormField(\nobscureText: controller.isHidenPassword ? true : false,\ndecoration: InputDecoration(\nlabelText: 'Password',\nlabelStyle: const TextStyle(\ncolor: Colors.blueGrey,\n),\nenabledBorder: const OutlineInputBorder(\nborderRadius: BorderRadius.all(\nRadius.circular(8.0),\n),\nborderSide: BorderSide(\ncolor: Colors.blueGrey,\n),\n),\nprefixIcon: Icon(\nIcons.lock,\ncolor: primaryColor,\n),\nsuffixIcon: IconButton(\nonPressed: () {\ncontroller.isHidenPassword = !controller.isHidenPassword;\ncontroller.setState(() {});\n},\nicon: Icon(\ncontroller.isHidenPassword\n? Icons.visibility_off\n: Icons.visibility,\nsize: 24.0,\ncolor: controller.isHidenPassword\n? textfieldIconColor\n: primaryColor,\n),\n),\n),\nonChanged: (value) {},\n),"
  }
}